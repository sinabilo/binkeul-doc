.. include:: _pub.rst

==============================
문자의 확장
==============================
문자의 조합은 한자, 한글 등의 여러 문자체계에서 쓰이는 방법으로 이미 있는 문자들을 조합하거나 부호를 덧붙여서 형태적인 파생을 만든다. 몇가지 단순한 조합만으로도 다양한 형태적 차이를 만들어 낼 수 있다. 문자를 조합하는 것는 문자를 더욱 효율적으로 활용하거나 형태적인 미를 추구하거나 또는 그 외 다양한 이유가 있다. 

빈글에서도 이미 있는 문자들을 결합과 조합이라는 방법으로 문자의 개념을 확장하고 새로운 문자를 효율적으로 재생산한다. 빈글에서 문자를 결합하고 조합하는 주된 이유는 코드의 정보량을 증가시키고 문자들을 기초적 의미단위에서 묶어서 문법적인 해석을 보다 명확하고 효율적으로 하는 것이 목적이다. 보통 컴퓨터에서 문자코드로 이루어진 자연어의 텍스트에서 기계적인 자동화된 처리에 의해 형태소와 단어를 구분해내고 해석하는 작업은 비교적 큰 부하가 드는 작업이다. 또한 문자열 사이의 모호한 경계와 의미의 단어들로 부터 정확한 단어와 의미를 얻어내고 문맥에 맞게 뜻을 찾았다 해도 결과를 온전히 기계에 맞기는 일은 위험하기까지 하다. 이런 기계적인 언어처리의 단점을 개선하기 위해서 빈글은 문자코드의 입력시에 자료를 충분히 구조화하여 보다 정확하고 효율적인 결과를 얻는 것을 추구한다. 

문자유형
====================
빈글은 하나의 의미를 표현하는데 되도록이면 짧은 코드가 되도록 표의문자(뜻문자)를 주된 문자로 채택한다. ``나무``, ``물``, ``사람`` 등 기본개념을 표현하는 문자는 대부분 표의문자이다. 또한 알파벳형의 문자도 사용할 수 있는데 알파벳문자는 작은 변화로도 새로운 단어를 형성하는 것이 용이하다는 장점이 있다. 반면 한자와 같이 정보량이 큰 문자는 용어의 명확한 의미를 파악하고 문자들을 합성해야하므로 단어를 만드는 것이 더 어렵지만 잘 만들어진 표의문자 용어는 어휘의 관계망과 잘 부합하고 대상을 의미로 나타내므로 기억하기 좋다.
빈글문자는 표의문자와 알파벳문자를 함께 사용하며 두 가지 문자유형의 장점을 두루 취할 수 있다.

빈글은 다음 다섯가지의 문자유형이 있다. 

    a. 뜻문자 : 표의문자 
    b. 쪽문자 : 음소문자, 룬문자, 숫자, 알파벳, 형태자 등
    c. 기능자 : 후치사, 칸블럭, 괄호 등 
    d. 조합자
    e. 결합자 
 
문자유형 중에 기능자는 문법적 기능을 위해 쓰이며 조합자와 결합자는 확장된 형식의 문자이다. 대부분의 문자는 뜻문자와 쪽문자에 속한다. 
 
.. list-table::

    * - .. graphviz::
           :align: center 
           
           graph foo {
              layout=neato;
              
              edge[penwidth=2.5]      
              node [shape=circle, fontname="gulim.ttc", fontsize=9];
                
              T[label="형태소",penwidth=0,pos="0,1!" ]
              C[width=0, height=0, label="", pos="0,-1!" ]
              L[label="무의미", pos="-1,0!"]
              R[label="의미", pos="1,0!"]
              
              A[label="쪽문자\n\n조합자\n\n기능자", penwidth=0, pos="-1,-1!"]
              B[label="뜻문자\n\n조합자\n\n결합자", penwidth=0, pos="1,-1!"]
              
              L -- R [penwidth=0.3];
              T -- C ; 
             
           }
           
        .. figure:: /_static/_empty.png
           :width: 200
           :height: 1
           :figwidth: 350
           :name: c1
           
           |nbsp|

뜻문자는 형태소를 기준으로 의미의 집적도가 높은 문자이고 쪽문자는 집적도가 낮은 문자를 의미한다. 뜻문자는 문자하나로도 의미를 지니며 복합적인 의미의 문자도 있다. 쪽문자는 하나 이상의 문자들이 결합해야 온전한 의미를 지니는 문자이다. 쪽문자에는 음소문자, 숫자, 형태자 등이 포함된다. 


형태적으로 쪽문자는 상단에 점이 있어 뜻문자와 쉽게 구분할 수 있다. 조합자와 결합자는 문자조합, 문자결합의 방법으로 두 개 이상의 문자들을 합쳐서 만들어지는 문자다.

.. list-table::

   * - .. figure:: /_static/문자확장/문자유형.png
          :align: center
          :name: c4
       
          |nbsp|

문자분류
====================
빈글의 문자유형을 크게 틀자와 논리자로 구별하는 방식과 낱자와 무리자로 구별하는 분류방식이 있다.
첫번째 분류방식은 빈글격자를 틀로 정하고 그 기준으로 분류하는 방식이다. 틀자는 빈글격자라는 틀 안에서 한 번에 입력되는 문자를 의미한다.
논리자는 틀을 벗어나지만 논리적으로 문자에 해당하는 문자라는 뜻이다. 즉 논리자는 하나 이상의 틀자가 결합되어 생성되는 문자이며 문자의 물리적 크기를 벗어나 무한히 확장될 수 있다.

* 문자-분류A
    #. **틀자**
        a. `뜻문자` (표의문자)
        b. `쪽문자`
        c. `기능자` 
        d. `조합자`
    #. **논리자** 
        e. `결합자`
        
두번째 분류방식은 문자의 구성이 단일한지 아니면 복합적인지로 구분한다. 낱자는 다른 문자에서 비롯함이 없이 자체적으로 원형이 되는 문자이다. 무리자는 다른 문자에서 기원하는 두 개 이상의 문자로 구성되는 문자이다. 낱자는 문자코드에 등록되지만 무리자는 구성요소의 코드로 분해되어 고유한 값를 가지므로 문자코드로 등록될 필요가 없다. 따라서 어떤 조합이든지 어떤 결합이든지 가능한 무한의 조합을 문자로 사용할수 있다.

* 문자-분류B

    #. **낱자**
        a. `뜻문자`
        b. `쪽문자`
        c. `기능자`

    #. **무리자**
        d. `조합자`
        e. `결합자`


.. ::

    .. |bc| replace:: **문자-분류**
    .. |tt| replace:: 틀자
    .. |ffc| replace:: 무리자
    .. |btt| replace:: 논리자
    .. |mjdn| replace:: 뜻문자
    .. |exmj| replace:: 쪽문자
    .. |knj| replace:: 기능자
    .. |jhj| replace:: 조합자
    .. |emj| replace:: 결합자

    +------------+------------+------------+------------+
    | |bc|       | |tt|       | |mjdn|     |            |
    |            |            +------------+            |
    |            |            | |exmj|     |            |
    |            |            +------------+            |
    |            |            | |knj|      |            |
    |            |            +------------+------------+
    |            |            | |jhj|      | |ffc|      |
    |            +------------+------------+            |
    |            | |btt|      | |emj|      |            |
    +------------+------------+------------+------------+


..  flat-table:: |nbsp|
    :name: cc01
   
   
    * - :cspan:`1` 
      - 문자유형
      - :cspan:`1` 
    * - :rspan:`4` 문자-분류A
      - :rspan:`3` **틀자**
      - `뜻문자`
      - :rspan:`2` **낱자**
      - :rspan:`4` 문자-분류B
    * - `쪽문자`
    * - `기능자`
    * - `조합자`
      - :rspan:`1` **무리자**
    * - **논리자**
      - `결합자`
    
조합자는 빈글격자 내에서 만들어지므로 틀자에 속하며 여러 낱자로 구성되므로 무리자에 속한다.
결합자는 

.. list-table::

   * - .. figure:: /_static/문자확장/문자분류.png
          :align: center
          :name: c2
       
          |nbsp|


문자결합
====================
문자유형에서 틀자에 속하는 문자는 서로 결합할 수 있다. 결합은 문자들이 앞뒤로 단순히 늘어서 있는 것보다 더 강력한 결속을 만든다.
결속시키기 위해서 틀자에 속한 문자는 두 가지 상태 독립자 상태와 의존자 상태를 가진다. 의존자 상태의 틀자는 단독으로 사용될 수 없고 반드시 마지막에 독립자와 이어져야 한다. 즉 좌측에 하나 이상의 의존자와 우측에 하나의 독립자가 묶여서 하나의 논리자가 된다. 그리고 이렇게 생성된 논리자는 하나의 문자처럼 작동된다. 논리자를 이루는 구성요소의 갯수는 논리적으로 무한히 확장될 수 있지만 뜻문자가 구성요소인 경우 보통 두 개에서 세 개 정도가 대부분이다.

.. list-table::

    * - ..  graphviz::
            :align: center 

            digraph finite_state_machine {
                rankdir=LR;
                size="8,5"
                node [shape = doublecircle];
                node [shape = circle, fontname="gulim.ttc", fontsize=9];
                
                L [label="의존자"];
                R [label="독립자"];
                
                L -> R [ label = "" ];
                L -> L [ label = "1+" ];
                
            }


        .. figure:: /_static/_empty.png
           :width: 200
           :height: 1
           :figwidth: 350
           :name: c3
           
           논리자
                      
틀자에 속한 뜻문자, 쪽문자, 조합문자는 의존자와 독립자 상태를 구분하는 방식이 서로 다르다.
뜻문자의 경우 의존자는 독립자 보다 하나의 획이 적다. 즉 뜻문자가 결여된 획이 있으면 의존자가 된다.
쪽문자의 경우 독립자는 상단에 점획 하나가 있다. 의존자에서 그 점획이 없어진다.
조합자의 경우 독립자는 빈글격자에서 구성요소가 차지하고 남은 여백에 점획이 있다. 의존자에서 그 점획이 없어진다.


.. ::


    +-------------------------+------------+------------+
    |                         |            |            |
    +------------+------------+------------+------------+
    |            |            |            |            |
    |            +------------+------------+------------+
    |            |            |            |            |
    |            +------------+------------+------------+
    |            |            |            |            |
    |            +------------+------------+------------+
    |            |            |            |            |
    +------------+------------+------------+------------+


.. flat-table:: |nbsp|
   :widths: 15 15 15 15
   :name: 표ee

   * - :cspan:`1` |nbsp|
     - 독립자
     - 의존자
     
     
   * - :rspan:`5` **틀자**
     - :rspan:`1` `뜻문자`
     - .. image:: /_static/문자확장/kh-1-1.png
     - .. image:: /_static/문자확장/kh-1-2.png
   * - .. image:: /_static/문자확장/kh-1-3.png
     - .. image:: /_static/문자확장/kh-1-4.png
   * - :rspan:`1` `쪽문자`
     - .. image:: /_static/문자확장/kh-2-1.png
     - .. image:: /_static/문자확장/kh-2-2.png
   * - .. image:: /_static/문자확장/kh-2-3.png
     - .. image:: /_static/문자확장/kh-2-4.png
   * - :rspan:`1` `조합자`
     - .. image:: /_static/문자확장/kh-3-1.png
     - .. image:: /_static/문자확장/kh-3-2.png
   * - .. image:: /_static/문자확장/kh-3-3.png
     - .. image:: /_static/문자확장/kh-3-4.png
     
     
일반적으로 문자는 글이 시각적으로 구분되는 최소단위를 의미한다. 빈글에서 문자의 개념은 보다 확장되어 논리적으로 구분되는 글의 최소단위를 의미한다. 즉 논리적 문자라는 개념은 하나 이상의 문자들을 한 문자로 처리한다. 빈글의 논리자는 두 개 또는 세 개, 그 이상의 문자로 보여도 논리적으로 하나의 문자와 같이 취급할 수 있다.
논리자는 문자로 인식되는 범위가 커져서 하나의 문자에 담을 수 있는 정보량이 커지는 장점이 있고 식별성을 높일 수 있기 때문에 큰 규모의 문자열에서 검색, 치환 등 작업에서 유리하다.



문자조합
====================

문자조합은  ...